{"ast":null,"code":"var _jsxFileName = \"/home/eric/sd-07-project-trivia-react-redux/src/pages/Login.js\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { Redirect } from 'react-router-dom';\nimport { login } from '../actions';\n\nclass Login extends React.Component {\n  constructor() {\n    super();\n    this.state = {\n      email: '',\n      name: '',\n      authentication: false\n    };\n    this.handleEmailChange = this.handleEmailChange.bind(this);\n    this.handleNameChange = this.handleNameChange.bind(this);\n  }\n\n  handleEmailChange({\n    target\n  }) {\n    const value = target.value;\n    this.setState({\n      email: value\n    }, () => {\n      const email = this.state.email;\n      const regexEmail = /^\\w+@[a-zA-Z_]+?\\.[a-zA-Z]{2,3}$/;\n      const verifyEmail = email.match(regexEmail);\n\n      if (verifyEmail) {\n        this.setState({\n          authentication: true\n        });\n      } else {\n        this.setState({\n          authentication: false\n        });\n      }\n    });\n  }\n\n  handleNameChange({\n    target\n  }) {\n    const value = target.value;\n    this.setState({\n      name: value\n    });\n  }\n\n  render() {\n    const _this$state = this.state,\n          authentication = _this$state.authentication,\n          email = _this$state.email,\n          name = _this$state.name;\n    const _this$props = this.props,\n          loggingin = _this$props.loggingin,\n          logged = _this$props.logged;\n    const numberCharacters = 1;\n    const history = this.props.history;\n\n    if (logged) {\n      return React.createElement(Redirect, {\n        to: \"/\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 47\n        },\n        __self: this\n      });\n    }\n\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50\n      },\n      __self: this\n    }, React.createElement(\"input\", {\n      \"data-testid\": \"input-gravatar-email\",\n      onChange: event => this.handleEmailChange(event),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51\n      },\n      __self: this\n    }), React.createElement(\"input\", {\n      \"data-testid\": \"input-player-name\",\n      onChange: event => this.handleNameChange(event),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55\n      },\n      __self: this\n    }), React.createElement(\"button\", {\n      \"data-testid\": \"btn-play\",\n      disabled: !authentication || name.length < numberCharacters,\n      type: \"button\",\n      onClick: () => loggingin(email),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59\n      },\n      __self: this\n    }, \"Jogar\"), React.createElement(\"button\", {\n      \"data-testid\": \"btn-settings\",\n      type: \"button\",\n      onClick: () => history.push('/settings'),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67\n      },\n      __self: this\n    }, \"Configura\\xE7\\xF5es\"));\n  }\n\n}\n\nconst mapDispatchToProps = dispatch => ({\n  loggingin: email => dispatch(login(email))\n});\n\nconst mapStateToProps = state => ({\n  logged: state.login\n});\n\nLogin.propTypes = {\n  loggingin: PropTypes.func.isRequired,\n  logged: PropTypes.bool.isRequired,\n  history: PropTypes.func.isRequired\n}; // export default Login;\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Login);","map":{"version":3,"sources":["/home/eric/sd-07-project-trivia-react-redux/src/pages/Login.js"],"names":["React","PropTypes","connect","Redirect","login","Login","Component","constructor","state","email","name","authentication","handleEmailChange","bind","handleNameChange","target","value","setState","regexEmail","verifyEmail","match","render","props","loggingin","logged","numberCharacters","history","event","length","push","mapDispatchToProps","dispatch","mapStateToProps","propTypes","func","isRequired","bool"],"mappings":"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","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { Redirect } from 'react-router-dom';\nimport { login } from '../actions';\n\nclass Login extends React.Component {\n  constructor() {\n    super();\n\n    this.state = {\n      email: '',\n      name: '',\n      authentication: false,\n    };\n\n    this.handleEmailChange = this.handleEmailChange.bind(this);\n    this.handleNameChange = this.handleNameChange.bind(this);\n  }\n\n  handleEmailChange({ target }) {\n    const { value } = target;\n    this.setState({ email: value }, () => {\n      const { email } = this.state;\n      const regexEmail = /^\\w+@[a-zA-Z_]+?\\.[a-zA-Z]{2,3}$/;\n      const verifyEmail = email.match(regexEmail);\n      if (verifyEmail) {\n        this.setState({ authentication: true });\n      } else {\n        this.setState({ authentication: false });\n      }\n    });\n  }\n\n  handleNameChange({ target }) {\n    const { value } = target;\n    this.setState({ name: value });\n  }\n\n  render() {\n    const { authentication, email, name } = this.state;\n    const { loggingin, logged } = this.props;\n    const numberCharacters = 1;\n    const { history } = this.props;\n\n    if (logged) {\n      return <Redirect to=\"/\" />;\n    }\n    return (\n      <div>\n        <input\n          data-testid=\"input-gravatar-email\"\n          onChange={ (event) => this.handleEmailChange(event) }\n        />\n        <input\n          data-testid=\"input-player-name\"\n          onChange={ (event) => this.handleNameChange(event) }\n        />\n        <button\n          data-testid=\"btn-play\"\n          disabled={ !authentication || name.length < numberCharacters }\n          type=\"button\"\n          onClick={ () => loggingin(email) }\n        >\n          Jogar\n        </button>\n        <button\n          data-testid=\"btn-settings\"\n          type=\"button\"\n          onClick={ () => history.push('/settings') }\n        >\n          Configurações\n        </button>\n      </div>\n    );\n  }\n}\n\nconst mapDispatchToProps = (dispatch) => ({\n  loggingin: (email) => dispatch(login(email)),\n});\n\nconst mapStateToProps = (state) => ({\n  logged: state.login,\n});\n\nLogin.propTypes = {\n  loggingin: PropTypes.func.isRequired,\n  logged: PropTypes.bool.isRequired,\n  history: PropTypes.func.isRequired,\n};\n\n// export default Login;\nexport default connect(mapStateToProps, mapDispatchToProps)(Login);\n"]},"metadata":{},"sourceType":"module"}