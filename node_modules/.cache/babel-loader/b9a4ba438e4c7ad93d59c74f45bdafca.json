{"ast":null,"code":"var _jsxFileName = \"/home/eric/sd-07-project-trivia-react-redux/src/pages/Feedbacks.js\";\nimport PropTypes from 'prop-types';\nimport React, { Component } from 'react';\nimport { getStorage } from '../services';\n\nclass Feedbacks extends Component {\n  render() {\n    const minAssertions = 3;\n    const history = this.props.history;\n\n    const _getStorage = getStorage('state'),\n          assertions = _getStorage.player.assertions;\n\n    if (assertions >= minAssertions) {\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 13\n        },\n        __self: this\n      }, React.createElement(\"h1\", {\n        \"data-testid\": \"feedback-text\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 14\n        },\n        __self: this\n      }, \"Mandou bem!\"), React.createElement(\"h4\", {\n        \"data-testid\": \"feedback-total-score\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 17\n        },\n        __self: this\n      }, assertions), React.createElement(\"h4\", {\n        \"data-testid\": \"feedback-total-question\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 20\n        },\n        __self: this\n      }, assertions), React.createElement(\"button\", {\n        type: \"button\",\n        \"data-testid\": \"btn-play-again\",\n        onClick: () => history.push('/'),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 23\n        },\n        __self: this\n      }, \"Jogar Novamente\"), React.createElement(\"button\", {\n        type: \"button\",\n        \"data-testid\": \"btn-ranking\",\n        onClick: () => history.push('/ranking'),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 30\n        },\n        __self: this\n      }, \"Ver Ranking\"));\n    }\n\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 43\n      },\n      __self: this\n    }, React.createElement(\"h1\", {\n      \"data-testid\": \"feedback-text\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 44\n      },\n      __self: this\n    }, \"Podia ser melhor...\"), React.createElement(\"h4\", {\n      \"data-testid\": \"feedback-total-score\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 47\n      },\n      __self: this\n    }, assertions), React.createElement(\"h4\", {\n      \"data-testid\": \"feedback-total-question\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50\n      },\n      __self: this\n    }, assertions), React.createElement(\"button\", {\n      type: \"button\",\n      \"data-testid\": \"btn-play-again\",\n      onClick: () => history.push('/'),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53\n      },\n      __self: this\n    }, \"Jogar Novamente\"), React.createElement(\"button\", {\n      type: \"button\",\n      \"data-testid\": \"btn-ranking\",\n      onClick: () => history.push('/ranking'),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60\n      },\n      __self: this\n    }, \"Ver Ranking\"));\n  }\n\n}\n\nFeedbacks.propTypes = {\n  history: PropTypes.func.isRequired\n};\nexport default Feedbacks;","map":{"version":3,"sources":["/home/eric/sd-07-project-trivia-react-redux/src/pages/Feedbacks.js"],"names":["PropTypes","React","Component","getStorage","Feedbacks","render","minAssertions","history","props","assertions","player","push","propTypes","func","isRequired"],"mappings":";AAAA,OAAOA,SAAP,MAAsB,YAAtB;AACA,OAAOC,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,UAAT,QAA2B,aAA3B;;AAEA,MAAMC,SAAN,SAAwBF,SAAxB,CAAkC;AAChCG,EAAAA,MAAM,GAAG;AACP,UAAMC,aAAa,GAAG,CAAtB;AADO,UAECC,OAFD,GAEa,KAAKC,KAFlB,CAECD,OAFD;;AAAA,wBAG4BJ,UAAU,CAAC,OAAD,CAHtC;AAAA,UAGWM,UAHX,eAGCC,MAHD,CAGWD,UAHX;;AAKP,QAAIA,UAAU,IAAIH,aAAlB,EAAiC;AAC/B,aACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AAAI,uBAAY,eAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBADF,EAIE;AAAI,uBAAY,sBAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACIG,UADJ,CAJF,EAOE;AAAI,uBAAY,yBAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACIA,UADJ,CAPF,EAUE;AACE,QAAA,IAAI,EAAC,QADP;AAEE,uBAAY,gBAFd;AAGE,QAAA,OAAO,EAAG,MAAMF,OAAO,CAACI,IAAR,CAAa,GAAb,CAHlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,2BAVF,EAiBE;AACE,QAAA,IAAI,EAAC,QADP;AAEE,uBAAY,aAFd;AAGE,QAAA,OAAO,EAAG,MAAMJ,OAAO,CAACI,IAAR,CAAa,UAAb,CAHlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBAjBF,CADF;AA6BD;;AACD,WACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAI,qBAAY,eAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,6BADF,EAIE;AAAI,qBAAY,sBAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACIF,UADJ,CAJF,EAOE;AAAI,qBAAY,yBAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACIA,UADJ,CAPF,EAUE;AACE,MAAA,IAAI,EAAC,QADP;AAEE,qBAAY,gBAFd;AAGE,MAAA,OAAO,EAAG,MAAMF,OAAO,CAACI,IAAR,CAAa,GAAb,CAHlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,yBAVF,EAiBE;AACE,MAAA,IAAI,EAAC,QADP;AAEE,qBAAY,aAFd;AAGE,MAAA,OAAO,EAAG,MAAMJ,OAAO,CAACI,IAAR,CAAa,UAAb,CAHlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBAjBF,CADF;AA4BD;;AAjE+B;;AAoElCP,SAAS,CAACQ,SAAV,GAAsB;AACpBL,EAAAA,OAAO,EAAEP,SAAS,CAACa,IAAV,CAAeC;AADJ,CAAtB;AAIA,eAAeV,SAAf","sourcesContent":["import PropTypes from 'prop-types';\nimport React, { Component } from 'react';\nimport { getStorage } from '../services';\n\nclass Feedbacks extends Component {\n  render() {\n    const minAssertions = 3;\n    const { history } = this.props;\n    const { player: { assertions } } = getStorage('state');\n\n    if (assertions >= minAssertions) {\n      return (\n        <div>\n          <h1 data-testid=\"feedback-text\">\n            Mandou bem!\n          </h1>\n          <h4 data-testid=\"feedback-total-score\">\n            { assertions }\n          </h4>\n          <h4 data-testid=\"feedback-total-question\">\n            { assertions }\n          </h4>\n          <button\n            type=\"button\"\n            data-testid=\"btn-play-again\"\n            onClick={ () => history.push('/') }\n          >\n            Jogar Novamente\n          </button>\n          <button\n            type=\"button\"\n            data-testid=\"btn-ranking\"\n            onClick={ () => history.push('/ranking') }\n          >\n            Ver Ranking\n          </button>\n\n        </div>\n\n      );\n    }\n    return (\n      <div>\n        <h1 data-testid=\"feedback-text\">\n          Podia ser melhor...\n        </h1>\n        <h4 data-testid=\"feedback-total-score\">\n          { assertions }\n        </h4>\n        <h4 data-testid=\"feedback-total-question\">\n          { assertions }\n        </h4>\n        <button\n          type=\"button\"\n          data-testid=\"btn-play-again\"\n          onClick={ () => history.push('/') }\n        >\n          Jogar Novamente\n        </button>\n        <button\n          type=\"button\"\n          data-testid=\"btn-ranking\"\n          onClick={ () => history.push('/ranking') }\n        >\n          Ver Ranking\n        </button>\n      </div>\n\n    );\n  }\n}\n\nFeedbacks.propTypes = {\n  history: PropTypes.func.isRequired,\n};\n\nexport default Feedbacks;\n"]},"metadata":{},"sourceType":"module"}