{"ast":null,"code":"var _jsxFileName = \"/home/eric/sd-07-project-trivia-react-redux/src/pages/Login.js\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { login, fetchToken } from '../actions/index';\n\nclass Login extends React.Component {\n  constructor() {\n    super();\n    this.state = {\n      email: '',\n      name: '',\n      authentication: false\n    };\n    this.handleEmailChange = this.handleEmailChange.bind(this);\n    this.handleNameChange = this.handleNameChange.bind(this);\n    this.handleClick = this.handleClick.bind(this);\n  }\n\n  handleEmailChange({\n    target\n  }) {\n    const value = target.value;\n    this.setState({\n      email: value\n    }, () => {\n      const email = this.state.email;\n      const regexEmail = /^\\w+@[a-zA-Z_]+?\\.[a-zA-Z]{2,3}$/;\n      const verifyEmail = email.match(regexEmail);\n\n      if (verifyEmail) {\n        this.setState({\n          authentication: true\n        });\n      } else {\n        this.setState({\n          authentication: false\n        });\n      }\n    });\n  }\n\n  handleNameChange({\n    target\n  }) {\n    const value = target.value;\n    this.setState({\n      name: value\n    });\n  }\n\n  async handleClick() {\n    const _this$props = this.props,\n          history = _this$props.history,\n          tokenAction = _this$props.tokenAction,\n          token = _this$props.token;\n    await tokenAction();\n    localStorage.setItem('token', token);\n    history.push('/game');\n  }\n\n  render() {\n    const _this$state = this.state,\n          authentication = _this$state.authentication,\n          email = _this$state.email,\n          name = _this$state.name;\n    const loginAction = this.props.loginAction;\n    const numberCharacters = 1;\n    const history = this.props.history;\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54\n      },\n      __self: this\n    }, React.createElement(\"input\", {\n      \"data-testid\": \"input-gravatar-email\",\n      onChange: event => this.handleEmailChange(event),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55\n      },\n      __self: this\n    }), React.createElement(\"input\", {\n      \"data-testid\": \"input-player-name\",\n      onChange: event => this.handleNameChange(event),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59\n      },\n      __self: this\n    }), React.createElement(\"button\", {\n      \"data-testid\": \"btn-play\",\n      disabled: !authentication || name.length < numberCharacters,\n      type: \"button\",\n      onClick: () => {\n        loginAction(name, email);\n        this.handleClick();\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63\n      },\n      __self: this\n    }, \"Jogar\"), React.createElement(\"button\", {\n      \"data-testid\": \"btn-settings\",\n      type: \"button\",\n      onClick: () => history.push('/settings'),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 74\n      },\n      __self: this\n    }, \"Configura\\xE7\\xF5es\"));\n  }\n\n}\n\nconst mapDispatchToProps = dispatch => ({\n  loginAction: (name, email) => dispatch(login(name, email)),\n  tokenAction: token => dispatch(fetchToken(token))\n});\n\nconst mapStateToProps = state => ({\n  token: state.login.token\n});\n\nLogin.propTypes = {\n  loginAction: PropTypes.func.isRequired,\n  history: PropTypes.func.isRequired,\n  tokenAction: PropTypes.func.isRequired,\n  token: PropTypes.string.isRequired\n};\nexport default connect(mapStateToProps, mapDispatchToProps)(Login);","map":{"version":3,"sources":["/home/eric/sd-07-project-trivia-react-redux/src/pages/Login.js"],"names":["React","PropTypes","connect","login","fetchToken","Login","Component","constructor","state","email","name","authentication","handleEmailChange","bind","handleNameChange","handleClick","target","value","setState","regexEmail","verifyEmail","match","props","history","tokenAction","token","localStorage","setItem","push","render","loginAction","numberCharacters","event","length","mapDispatchToProps","dispatch","mapStateToProps","propTypes","func","isRequired","string"],"mappings":"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","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { login, fetchToken } from '../actions/index';\n\nclass Login extends React.Component {\n  constructor() {\n    super();\n\n    this.state = {\n      email: '',\n      name: '',\n      authentication: false,\n    };\n\n    this.handleEmailChange = this.handleEmailChange.bind(this);\n    this.handleNameChange = this.handleNameChange.bind(this);\n    this.handleClick = this.handleClick.bind(this);\n  }\n\n  handleEmailChange({ target }) {\n    const { value } = target;\n    this.setState({ email: value }, () => {\n      const { email } = this.state;\n      const regexEmail = /^\\w+@[a-zA-Z_]+?\\.[a-zA-Z]{2,3}$/;\n      const verifyEmail = email.match(regexEmail);\n      if (verifyEmail) {\n        this.setState({ authentication: true });\n      } else {\n        this.setState({ authentication: false });\n      }\n    });\n  }\n\n  handleNameChange({ target }) {\n    const { value } = target;\n    this.setState({ name: value });\n  }\n\n  async handleClick() {\n    const { history, tokenAction, token } = this.props;\n    await tokenAction();\n    localStorage.setItem('token', token);\n    history.push('/game');\n  }\n\n  render() {\n    const { authentication, email, name } = this.state;\n    const { loginAction } = this.props;\n    const numberCharacters = 1;\n    const { history } = this.props;\n\n    return (\n      <div>\n        <input\n          data-testid=\"input-gravatar-email\"\n          onChange={ (event) => this.handleEmailChange(event) }\n        />\n        <input\n          data-testid=\"input-player-name\"\n          onChange={ (event) => this.handleNameChange(event) }\n        />\n        <button\n          data-testid=\"btn-play\"\n          disabled={ !authentication || name.length < numberCharacters }\n          type=\"button\"\n          onClick={ () => {\n            loginAction(name, email);\n            this.handleClick();\n          } }\n        >\n          Jogar\n        </button>\n        <button\n          data-testid=\"btn-settings\"\n          type=\"button\"\n          onClick={ () => history.push('/settings') }\n        >\n          Configurações\n        </button>\n      </div>\n    );\n  }\n}\n\nconst mapDispatchToProps = (dispatch) => ({\n  loginAction: (name, email) => dispatch(login(name, email)),\n  tokenAction: (token) => dispatch(fetchToken(token)),\n});\n\nconst mapStateToProps = (state) => ({\n  token: state.login.token,\n});\n\nLogin.propTypes = {\n  loginAction: PropTypes.func.isRequired,\n  history: PropTypes.func.isRequired,\n  tokenAction: PropTypes.func.isRequired,\n  token: PropTypes.string.isRequired,\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Login);\n"]},"metadata":{},"sourceType":"module"}