{"ast":null,"code":"var _jsxFileName = \"/home/eric/sd-07-project-trivia-react-redux/src/pages/Login.js\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { Redirect } from 'react-router-dom';\nimport { login, index } from '../actions';\n\nclass Login extends React.Component {\n  constructor() {\n    super();\n    this.state = {\n      email: '',\n      name: '',\n      authentication: false\n    };\n    this.handleEmailChange = this.handleEmailChange.bind(this);\n    this.handleNameChange = this.handleNameChange.bind(this);\n    this.handleClick = this.handleClick.bind(this);\n  }\n\n  handleEmailChange({\n    target\n  }) {\n    const value = target.value;\n    this.setState({\n      email: value\n    }, () => {\n      const email = this.state.email;\n      const regexEmail = /^\\w+@[a-zA-Z_]+?\\.[a-zA-Z]{2,3}$/;\n      const verifyEmail = email.match(regexEmail);\n\n      if (verifyEmail) {\n        this.setState({\n          authentication: true\n        });\n      } else {\n        this.setState({\n          authentication: false\n        });\n      }\n    });\n  }\n\n  handleNameChange({\n    target\n  }) {\n    const value = target.value;\n    this.setState({\n      name: value\n    });\n  }\n\n  handleClick() {\n    const _this$props = this.props,\n          history = _this$props.history,\n          tokenAction = _this$props.tokenAction,\n          token = _this$props.token;\n    history.push('/gamepage');\n    tokenAction();\n    localStorage.setItem('token', token);\n  }\n\n  render() {\n    const _this$state = this.state,\n          authentication = _this$state.authentication,\n          email = _this$state.email,\n          name = _this$state.name;\n    const _this$props2 = this.props,\n          loggingin = _this$props2.loggingin,\n          logged = _this$props2.logged;\n    const numberCharacters = 1;\n    const history = this.props.history;\n\n    if (logged) {\n      return React.createElement(Redirect, {\n        to: \"/\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 55\n        },\n        __self: this\n      });\n    }\n\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58\n      },\n      __self: this\n    }, React.createElement(\"input\", {\n      \"data-testid\": \"input-gravatar-email\",\n      onChange: event => this.handleEmailChange(event),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59\n      },\n      __self: this\n    }), React.createElement(\"input\", {\n      \"data-testid\": \"input-player-name\",\n      onChange: event => this.handleNameChange(event),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63\n      },\n      __self: this\n    }), React.createElement(\"button\", {\n      \"data-testid\": \"btn-play\",\n      disabled: !authentication || name.length < numberCharacters,\n      type: \"button\",\n      onClick: () => {\n        loggingin(email);\n        this.handleClick();\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67\n      },\n      __self: this\n    }, \"Jogar\"), React.createElement(\"button\", {\n      \"data-testid\": \"btn-settings\",\n      type: \"button\",\n      onClick: () => history.push('/settings'),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78\n      },\n      __self: this\n    }, \"Configura\\xE7\\xF5es\"));\n  }\n\n}\n\nconst mapDispatchToProps = dispatch => ({\n  loggingin: email => dispatch(login(email)),\n  tokenAction: () => dispatch(fetch.fetchToken())\n});\n\nconst mapStateToProps = state => ({\n  logged: state.login,\n  token: state.login.token\n});\n\nLogin.propTypes = {\n  loggingin: PropTypes.func.isRequired,\n  logged: PropTypes.bool.isRequired,\n  history: PropTypes.func.isRequired,\n  tokenAction: PropTypes.func.isRequired,\n  token: PropTypes.string.isRequired\n}; // export default Login;\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Login);","map":{"version":3,"sources":["/home/eric/sd-07-project-trivia-react-redux/src/pages/Login.js"],"names":["React","PropTypes","connect","Redirect","login","index","Login","Component","constructor","state","email","name","authentication","handleEmailChange","bind","handleNameChange","handleClick","target","value","setState","regexEmail","verifyEmail","match","props","history","tokenAction","token","push","localStorage","setItem","render","loggingin","logged","numberCharacters","event","length","mapDispatchToProps","dispatch","fetch","fetchToken","mapStateToProps","propTypes","func","isRequired","bool","string"],"mappings":"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","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { Redirect } from 'react-router-dom';\nimport { login, index } from '../actions';\n\nclass Login extends React.Component {\n  constructor() {\n    super();\n\n    this.state = {\n      email: '',\n      name: '',\n      authentication: false,\n    };\n\n    this.handleEmailChange = this.handleEmailChange.bind(this);\n    this.handleNameChange = this.handleNameChange.bind(this);\n    this.handleClick = this.handleClick.bind(this);\n  }\n\n  handleEmailChange({ target }) {\n    const { value } = target;\n    this.setState({ email: value }, () => {\n      const { email } = this.state;\n      const regexEmail = /^\\w+@[a-zA-Z_]+?\\.[a-zA-Z]{2,3}$/;\n      const verifyEmail = email.match(regexEmail);\n      if (verifyEmail) {\n        this.setState({ authentication: true });\n      } else {\n        this.setState({ authentication: false });\n      }\n    });\n  }\n\n  handleNameChange({ target }) {\n    const { value } = target;\n    this.setState({ name: value });\n  }\n\n  handleClick() {\n    const { history, tokenAction, token } = this.props;\n    history.push('/gamepage');\n    tokenAction();\n    localStorage.setItem('token', token);\n  }\n\n  render() {\n    const { authentication, email, name } = this.state;\n    const { loggingin, logged } = this.props;\n    const numberCharacters = 1;\n    const { history } = this.props;\n\n    if (logged) {\n      return <Redirect to=\"/\" />;\n    }\n    return (\n      <div>\n        <input\n          data-testid=\"input-gravatar-email\"\n          onChange={ (event) => this.handleEmailChange(event) }\n        />\n        <input\n          data-testid=\"input-player-name\"\n          onChange={ (event) => this.handleNameChange(event) }\n        />\n        <button\n          data-testid=\"btn-play\"\n          disabled={ !authentication || name.length < numberCharacters }\n          type=\"button\"\n          onClick={ () => {\n            loggingin(email);\n            this.handleClick();\n          } }\n        >\n          Jogar\n        </button>\n        <button\n          data-testid=\"btn-settings\"\n          type=\"button\"\n          onClick={ () => history.push('/settings') }\n        >\n          Configurações\n        </button>\n      </div>\n    );\n  }\n}\n\nconst mapDispatchToProps = (dispatch) => ({\n  loggingin: (email) => dispatch(login(email)),\n  tokenAction: () => dispatch(fetch.fetchToken()),\n});\n\nconst mapStateToProps = (state) => ({\n  logged: state.login,\n  token: state.login.token,\n});\n\nLogin.propTypes = {\n  loggingin: PropTypes.func.isRequired,\n  logged: PropTypes.bool.isRequired,\n  history: PropTypes.func.isRequired,\n  tokenAction: PropTypes.func.isRequired,\n  token: PropTypes.string.isRequired,\n};\n\n// export default Login;\nexport default connect(mapStateToProps, mapDispatchToProps)(Login);\n"]},"metadata":{},"sourceType":"module"}