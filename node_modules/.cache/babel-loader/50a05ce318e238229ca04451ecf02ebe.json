{"ast":null,"code":"var _jsxFileName = \"/home/eric/sd-07-project-trivia-react-redux/src/pages/Login.js\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { Redirect } from 'react-router-dom';\nimport { login } from '../actions';\n\nclass Login extends React.Component {\n  constructor() {\n    super();\n    this.state = {\n      email: '',\n      name: '',\n      authentication: false\n    };\n    this.handleEmailChange = this.handleEmailChange.bind(this);\n    this.handleNameChange = this.handleNameChange.bind(this);\n  }\n\n  render() {\n    const _this$state = this.state,\n          authentication = _this$state.authentication,\n          email = _this$state.email,\n          name = _this$state.name;\n    const _this$props = this.props,\n          loggingin = _this$props.loggingin,\n          logged = _this$props.logged;\n    const numberCharacters = 1;\n\n    if (logged) {\n      return React.createElement(Redirect, {\n        to: \"/\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 26\n        },\n        __self: this\n      });\n    }\n\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 29\n      },\n      __self: this\n    }, React.createElement(\"input\", {\n      \"data-testid\": \"input-gravatar-email\",\n      onChange: event => this.handleEmailChange(event),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 30\n      },\n      __self: this\n    }), React.createElement(\"input\", {\n      \"data-testid\": \"input-player-name\",\n      onChange: event => this.handleNameChange(event),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 34\n      },\n      __self: this\n    }), React.createElement(\"button\", {\n      \"data-testid\": \"btn-play\",\n      disabled: !authentication || name.length < numberCharacters,\n      type: \"button\",\n      onClick: () => loggingin(email),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 38\n      },\n      __self: this\n    }, \"Jogar\"));\n  }\n\n}\n\nconst mapDispatchToProps = dispatch => ({\n  loggingin: email => dispatch(login(email))\n});\n\nconst mapStateToProps = state => ({\n  logged: state.login\n});\n\nLogin.propTypes = {\n  loggingin: PropTypes.func.isRequired,\n  logged: PropTypes.bool.isRequired\n};\nexport default connect(mapStateToProps, mapDispatchToProps)(Login);","map":{"version":3,"sources":["/home/eric/sd-07-project-trivia-react-redux/src/pages/Login.js"],"names":["React","PropTypes","connect","Redirect","login","Login","Component","constructor","state","email","name","authentication","handleEmailChange","bind","handleNameChange","render","props","loggingin","logged","numberCharacters","event","length","mapDispatchToProps","dispatch","mapStateToProps","propTypes","func","isRequired","bool"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,QAAT,QAAyB,kBAAzB;AACA,SAASC,KAAT,QAAsB,YAAtB;;AAEA,MAAMC,KAAN,SAAoBL,KAAK,CAACM,SAA1B,CAAoC;AAClCC,EAAAA,WAAW,GAAG;AACZ;AAEA,SAAKC,KAAL,GAAa;AACXC,MAAAA,KAAK,EAAE,EADI;AAEXC,MAAAA,IAAI,EAAE,EAFK;AAGXC,MAAAA,cAAc,EAAE;AAHL,KAAb;AAMA,SAAKC,iBAAL,GAAyB,KAAKA,iBAAL,CAAuBC,IAAvB,CAA4B,IAA5B,CAAzB;AACA,SAAKC,gBAAL,GAAwB,KAAKA,gBAAL,CAAsBD,IAAtB,CAA2B,IAA3B,CAAxB;AACD;;AAEDE,EAAAA,MAAM,GAAG;AAAA,wBACiC,KAAKP,KADtC;AAAA,UACCG,cADD,eACCA,cADD;AAAA,UACiBF,KADjB,eACiBA,KADjB;AAAA,UACwBC,IADxB,eACwBA,IADxB;AAAA,wBAEuB,KAAKM,KAF5B;AAAA,UAECC,SAFD,eAECA,SAFD;AAAA,UAEYC,MAFZ,eAEYA,MAFZ;AAGP,UAAMC,gBAAgB,GAAG,CAAzB;;AACA,QAAID,MAAJ,EAAY;AACV,aAAO,oBAAC,QAAD;AAAU,QAAA,EAAE,EAAC,GAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAAP;AACD;;AACD,WACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AACE,qBAAY,sBADd;AAEE,MAAA,QAAQ,EAAIE,KAAD,IAAW,KAAKR,iBAAL,CAAuBQ,KAAvB,CAFxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,EAKE;AACE,qBAAY,mBADd;AAEE,MAAA,QAAQ,EAAIA,KAAD,IAAW,KAAKN,gBAAL,CAAsBM,KAAtB,CAFxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MALF,EASE;AACE,qBAAY,UADd;AAEE,MAAA,QAAQ,EAAG,CAACT,cAAD,IAAmBD,IAAI,CAACW,MAAL,GAAcF,gBAF9C;AAGE,MAAA,IAAI,EAAC,QAHP;AAIE,MAAA,OAAO,EAAG,MAAMF,SAAS,CAACR,KAAD,CAJ3B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eATF,CADF;AAoBD;;AAzCiC;;AA4CpC,MAAMa,kBAAkB,GAAIC,QAAD,KAAe;AACxCN,EAAAA,SAAS,EAAGR,KAAD,IAAWc,QAAQ,CAACnB,KAAK,CAACK,KAAD,CAAN;AADU,CAAf,CAA3B;;AAIA,MAAMe,eAAe,GAAIhB,KAAD,KAAY;AAClCU,EAAAA,MAAM,EAAEV,KAAK,CAACJ;AADoB,CAAZ,CAAxB;;AAIAC,KAAK,CAACoB,SAAN,GAAkB;AAChBR,EAAAA,SAAS,EAAEhB,SAAS,CAACyB,IAAV,CAAeC,UADV;AAEhBT,EAAAA,MAAM,EAAEjB,SAAS,CAAC2B,IAAV,CAAeD;AAFP,CAAlB;AAKA,eAAezB,OAAO,CAACsB,eAAD,EAAkBF,kBAAlB,CAAP,CAA6CjB,KAA7C,CAAf","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { Redirect } from 'react-router-dom';\nimport { login } from '../actions';\n\nclass Login extends React.Component {\n  constructor() {\n    super();\n\n    this.state = {\n      email: '',\n      name: '',\n      authentication: false,\n    };\n\n    this.handleEmailChange = this.handleEmailChange.bind(this);\n    this.handleNameChange = this.handleNameChange.bind(this);\n  }\n\n  render() {\n    const { authentication, email, name } = this.state;\n    const { loggingin, logged } = this.props;\n    const numberCharacters = 1;\n    if (logged) {\n      return <Redirect to=\"/\" />;\n    }\n    return (\n      <div>\n        <input\n          data-testid=\"input-gravatar-email\"\n          onChange={ (event) => this.handleEmailChange(event) }\n        />\n        <input\n          data-testid=\"input-player-name\"\n          onChange={ (event) => this.handleNameChange(event) }\n        />\n        <button\n          data-testid=\"btn-play\"\n          disabled={ !authentication || name.length < numberCharacters }\n          type=\"button\"\n          onClick={ () => loggingin(email) }\n        >\n          Jogar\n        </button>\n      </div>\n    );\n  }\n}\n\nconst mapDispatchToProps = (dispatch) => ({\n  loggingin: (email) => dispatch(login(email)),\n});\n\nconst mapStateToProps = (state) => ({\n  logged: state.login,\n});\n\nLogin.propTypes = {\n  loggingin: PropTypes.func.isRequired,\n  logged: PropTypes.bool.isRequired,\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Login);\n"]},"metadata":{},"sourceType":"module"}