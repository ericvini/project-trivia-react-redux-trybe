{"ast":null,"code":"import _objectSpread from \"/home/eric/sd-07-project-trivia-react-redux/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";\nimport { REQUEST_STARTED, REQUEST_FAIL, FETCH_QUESTIONS_SUCCESS, EMAIL_HASH, UPDATE_SCORE } from '../actions';\nconst INITIAL_STATE = {\n  isLoading: false,\n  error: '',\n  questions: {},\n  score: 0,\n  hash: ''\n};\n\nconst gameReducer = (state = INITIAL_STATE, action) => {\n  switch (action.type) {\n    case EMAIL_HASH:\n      return _objectSpread({}, state, {\n        hash: action.hash\n      });\n\n    case REQUEST_STARTED:\n      return _objectSpread({}, state, {\n        isLoading: true\n      });\n\n    case REQUEST_FAIL:\n      return _objectSpread({}, state, {\n        isLoading: false,\n        error: action.error.message\n      });\n\n    case FETCH_QUESTIONS_SUCCESS:\n      return _objectSpread({}, state, {\n        isLoading: false,\n        questions: action.payload\n      });\n\n    case UPDATE_SCORE:\n      return _objectSpread({}, state, {\n        score: state.score + 1\n      });\n\n    default:\n      return state;\n  }\n};\n\nexport default gameReducer;","map":{"version":3,"sources":["/home/eric/sd-07-project-trivia-react-redux/src/reducers/game.js"],"names":["REQUEST_STARTED","REQUEST_FAIL","FETCH_QUESTIONS_SUCCESS","EMAIL_HASH","UPDATE_SCORE","INITIAL_STATE","isLoading","error","questions","score","hash","gameReducer","state","action","type","message","payload"],"mappings":";AAAA,SACEA,eADF,EAEEC,YAFF,EAGEC,uBAHF,EAIEC,UAJF,EAKEC,YALF,QAMO,YANP;AAQA,MAAMC,aAAa,GAAG;AACpBC,EAAAA,SAAS,EAAE,KADS;AAEpBC,EAAAA,KAAK,EAAE,EAFa;AAGpBC,EAAAA,SAAS,EAAE,EAHS;AAIpBC,EAAAA,KAAK,EAAE,CAJa;AAKpBC,EAAAA,IAAI,EAAE;AALc,CAAtB;;AAQA,MAAMC,WAAW,GAAG,CAACC,KAAK,GAAGP,aAAT,EAAwBQ,MAAxB,KAAmC;AACrD,UAAQA,MAAM,CAACC,IAAf;AACA,SAAKX,UAAL;AACE,+BAAYS,KAAZ;AAAmBF,QAAAA,IAAI,EAAEG,MAAM,CAACH;AAAhC;;AACF,SAAKV,eAAL;AACE,+BAAYY,KAAZ;AAAmBN,QAAAA,SAAS,EAAE;AAA9B;;AACF,SAAKL,YAAL;AACE,+BAAYW,KAAZ;AACEN,QAAAA,SAAS,EAAE,KADb;AAEEC,QAAAA,KAAK,EAAEM,MAAM,CAACN,KAAP,CAAaQ;AAFtB;;AAIF,SAAKb,uBAAL;AACE,+BAAYU,KAAZ;AACEN,QAAAA,SAAS,EAAE,KADb;AAEEE,QAAAA,SAAS,EAAEK,MAAM,CAACG;AAFpB;;AAIF,SAAKZ,YAAL;AACE,+BAAYQ,KAAZ;AACEH,QAAAA,KAAK,EAAEG,KAAK,CAACH,KAAN,GAAc;AADvB;;AAGF;AACE,aAAOG,KAAP;AApBF;AAsBD,CAvBD;;AAyBA,eAAeD,WAAf","sourcesContent":["import {\n  REQUEST_STARTED,\n  REQUEST_FAIL,\n  FETCH_QUESTIONS_SUCCESS,\n  EMAIL_HASH,\n  UPDATE_SCORE,\n} from '../actions';\n\nconst INITIAL_STATE = {\n  isLoading: false,\n  error: '',\n  questions: {},\n  score: 0,\n  hash: '',\n};\n\nconst gameReducer = (state = INITIAL_STATE, action) => {\n  switch (action.type) {\n  case EMAIL_HASH:\n    return { ...state, hash: action.hash };\n  case REQUEST_STARTED:\n    return { ...state, isLoading: true };\n  case REQUEST_FAIL:\n    return { ...state,\n      isLoading: false,\n      error: action.error.message,\n    };\n  case FETCH_QUESTIONS_SUCCESS:\n    return { ...state,\n      isLoading: false,\n      questions: action.payload,\n    };\n  case UPDATE_SCORE:\n    return { ...state,\n      score: state.score + 1,\n    };\n  default:\n    return state;\n  }\n};\n\nexport default gameReducer;\n"]},"metadata":{},"sourceType":"module"}